// Time complexity O(n^2)
class Solution {
    public int[][] generateMatrix(int n) {
        int[][] result = new int[n][n];
        int row = result.length;
        if(row == 0) return result;
        int col = result[0].length;
        int count = 1, left = 0, right = col-1, top = 0, bottom=row -1, direction = 0;

        while(left <= right && top <= bottom){
            if( direction == 0){
                for(int i = left; i <= right; i++){
                    result[top][i] = count; count++;
                }
                direction = 1; top++;
            }

            else if(direction == 1){
                for(int i = top; i <= bottom; i++){
                    result[i][right] = count;count++;
                }
                direction=2; right--;
            }

            else if(direction ==2){
                for(int i = right; i >= left; i--){
                    result[bottom][i] = count;count++;
                }
                direction = 3; bottom--;
            }

            else if(direction == 3){
                for(int i = bottom; i >= top; i--){
                    result[i][left] = count;count++;
                }
                direction =0; left++;
            }
        }
        return result;
    }
}
